<?xml version="1.0" encoding="UTF-8"?>
<!-- mvc: Spring에서 기본으로 MVC형태 코드를 작성하며, 실행이 됨 -->

<!-- 기본엔진을 beans가 아니라, mvc 형태로 사용 -->
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!-- @을 이용하여 각 class별로 MVC형태 구현함 -->
	<annotation-driven></annotation-driven>
	
	<!-- resources: 패키지를 정하여 설정하는 태그 
	아래는 보안을 다 풀어놓은 상태로, 원래는 특정 패키지 안에 컨트롤러로 만듦(제한을 걸어둠) -->
	<resources location="/" mapping="/**"></resources>
	
	<!-- View 형태를 어떤 형태의 파일로 보여지도록 할 것인지 환경설정 (제약 설정 O) 
	prefix: jsp파일이 모여있는 디렉토리를 설정할 수 있음
	suffix: Controller에서 View 파일 속성을 설정할 수 있음 / Suffix를 사용하지 않으면, 직접 넣어야 함
		컨트롤에서 어떤 파일을 jsp로 사용할 것인지(View파일 필요) - Controller/jsp파일을 동일하게 작성 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/"></beans:property>
		<!-- <beans:property name="prefix" value="/WEB-INF/admin/"></beans:property>-->
		<beans:property name="suffix" value=".jsp"></beans:property>
	</beans:bean>
	
	<!-- Controller의 패키지 및 class명을 설정하여 작동시키도록 합니다. 
		해당 클래스 안에 Controller을 여러개 넣을 수 있음 -->
	<!-- 컨트롤러 하나에 문제가 생기면 나머지 컨트롤러도 다 오류 발생 -->
	<!-- class 하나씩만 작동할 수 있음 -->
	<!-- 
	<beans:bean class="spring_learning.mainpage"></beans:bean>
	<beans:bean class="spring_learning.mainpage2"></beans:bean>
	<beans:bean class="spring_learning.mainpage3"></beans:bean>
	<beans:bean class="spring_learning.macbook"></beans:bean>
	 -->
	<!-- spring_learning안에 @Controller가 붙어있는 것들은 다 작동되게 만듦 
		base-package: java package를 말하며, 해당 패키지에 있는 모든 @을 사용할 수 있도록 오픈함
		context: 전체 그룹을 관리하는 태그  -->
	<context:component-scan base-package="spring_learning,etc_model"/>
	
		
	
	<!-- Spring에서 I/O를 사용하기 위한 환경설정 
	defaultEncoding: 파일명의 기본 언어셋
	maxUploadSize: 최대 업로드 파일 크기(-1: 용량 제한 없음(무한 용량)
	maxInMemorySize: Tomcat에서 사용되는 메모리 서비스를 말함(파일 업로드시 작동되는, )
	-->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<beans:property name="defaultEncoding" value="utf-8"/>
			<beans:property name="maxUploadSize" value="-1"/>
			<!--<beans:property name="maxUploadSize" value="2097152"/> -->
			<beans:property name="maxInMemorySize" value="2097152"/>
	</beans:bean>
	
	
	
</beans:beans>