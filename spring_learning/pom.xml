<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>spring_learning</groupId>
	<artifactId>spring_learning</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>spring_learning</name>
	<description>spring_learning</description>
	
	<!--  배포 파일에 맞춰서 해당 압축파일을 생성하는 라이브러리  -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.2</version>
			</plugin>
		</plugins>
	</build>
	
	<!--  프로젝트에 필요한 각종 라이브러리 설치 목록 -->
	<dependencies>

	<!-- mail api -->
	<dependency>
	    <groupId>javax.mail</groupId>
	    <artifactId>javax.mail-api</artifactId>
	    <version>1.4.7</version>
	</dependency>
	
	<dependency>
	    <groupId>javax.mail</groupId>
	    <artifactId>mail</artifactId>
	    <version>1.4.7</version>
	</dependency>
	
	<dependency>
	    <groupId>javax.activation</groupId>
	    <artifactId>activation</artifactId>
	    <version>1.1.1</version>
	</dependency>

	<!-- JSON IN JAVA(API, .JSON파일) -->
	<dependency>
	    <groupId>org.json</groupId>
	    <artifactId>json</artifactId>
	    <version>20250107</version>
	</dependency>
	
	<!-- JSON Simple(API, .JSON파일) -->
	<dependency>
	    <groupId>com.googlecode.json-simple</groupId>
	    <artifactId>json-simple</artifactId>
	    <version>1.1.1</version>
	</dependency>
	
	<!-- Spring, Spring-boot Database관련 id의존성 주입하기 위해서 사용
	@Inject 사용 가능함 -->
	<dependency>
	    <groupId>javax.inject</groupId>
	    <artifactId>javax.inject</artifactId>
	    <version>1</version>
	</dependency>
	
	<!-- slf4j(log 출력 라이브러리): jdk 및 라이브러리 호출에 대한 정보 -->
	<dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>slf4j-api</artifactId>
	    <version>2.0.17</version>
	</dependency>
		
	<!-- runtime: 실행되는 동안 문제를 체크해줌  -->
	<!-- Controller, Model을 구현시, 결과값의 처리 정보를 출력 -->
	<dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>slf4j-log4j12</artifactId>
	    <version>2.0.17</version>
	    <type>pom</type>
	    <scope>runtime</scope>
	</dependency>

	<!-- 서버 오류 및 소켓통신, 포트통신일 경우 기록 -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>jcl-over-slf4j</artifactId>
		<version>2.0.17</version>
		<scope>runtime</scope>
	</dependency>

	<!-- console에 출력 / 이게 없으면 에러가 나도 파일을 확인하지 않는 이상 확인 x -->
	<dependency>
	    <groupId>log4j</groupId>
	    <artifactId>log4j</artifactId>
	    <version>1.2.17</version>
	</dependency>

	<!-- mybatis -->
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis</artifactId>
	    <version>3.5.6</version>
	</dependency>
		
	<!-- mybatis spring -->
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis-spring</artifactId>
	    <version>2.0.6</version>
	</dependency>

	<!--  파일업로드 라이브러리  -->
	<dependency>
		<groupId>commons-fileupload</groupId>
		<artifactId>commons-fileupload</artifactId>
		<version>1.5</version>
	</dependency>
	
	<!--  lombok : DTO,VO (setter,getter)  -->
	<dependency>
	<groupId>org.projectlombok</groupId>
		<artifactId>lombok</artifactId>
		<version>1.18.36</version>
		<scope>provided</scope>
	</dependency>
	
	<!--  JSP + JSTL 언어를 사용하기 위한 라이브러리  -->
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>jstl</artifactId>
		<version>1.2</version>
	</dependency>
	
	<!--  spring+mysql (Model, Controller, View) : mysql 서버 접속 환경설정 라이브러리  -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>5.3.39</version>
	</dependency>
	
	<!--  Spring MVC  -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>5.3.39</version>
	</dependency>
	
	<!--  was 버젼셋팅  -->
	<dependency>
		<groupId>org.apache.tomcat</groupId>
		<artifactId>tomcat-catalina</artifactId>
		<version>8.5.61</version>
	</dependency>
	
	<!--   DBCP : (Database Connection) - Spring, Spring-boot  -->
	<dependency>
		<groupId>commons-dbcp</groupId>
		<artifactId>commons-dbcp</artifactId>
		<version>1.4</version>
	</dependency>
	
	<!--  java web으로 사용할 수 있는 Servlet 라이브러리  -->
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>3.1.0</version>
		<scope>provided</scope>
	</dependency>
	
	<!--  mysql 라이브러리  -->
	<!-- 만약 mysql의 버전이 맞지 않아 새로운 버전으로 바꿔야 한다면
	Maven reposiory에 들어가 mysql 검색 후 맞는 버전 다운로드.
	아래와 같이 dependency 작성하면 mysql 다운받아짐 -->
	<!-- DB를 두개 이상 쓰는 경우, dependency가 두개 존재 -> msa -->
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>8.0.30</version>
		</dependency>
	</dependencies>
	
	<!--  jdk 셋팅 버젼  -->
		<properties>
			<maven.compiler.source>11</maven.compiler.source>
			<maven.compiler.target>11</maven.compiler.target>
		</properties>
	</project>